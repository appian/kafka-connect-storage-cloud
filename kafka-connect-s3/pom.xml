<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2018 Confluent Inc.
  ~
  ~ Licensed under the Confluent Community License (the "License"); you may not use
  ~ this file except in compliance with the License.  You may obtain a copy of the
  ~ License at
  ~
  ~ http://www.confluent.io/confluent-community-license
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OF ANY KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-cloud</artifactId>
        <version>10.6.0-SNAPSHOT</version>
    </parent>

<!--    <groupId>io.confluent</groupId>-->
<!--    <version>10.6.0-SNAPSHOT</version>-->
    <artifactId>kafka-connect-s3</artifactId>
    <packaging>jar</packaging>
    <name>kafka-connect-s3</name>

    <description>
        Kafka Connect cloud storage connector for Amazon Simple Storage Service (S3).
    </description>

    <properties>
        <aws.version>1.12.650</aws.version>
        <s3mock.version>0.2.5</s3mock.version>
        <kafka.connect.maven.plugin.version>0.11.1</kafka.connect.maven.plugin.version>
        <parquet.tools.version>1.11.1</parquet.tools.version>
        <formatters.version>0.2.2</formatters.version>
        <confluent.connect.testcontainers.version>1.0.1</confluent.connect.testcontainers.version>
        <org.testcontainer.version>1.15.0</org.testcontainer.version>
        <maven.failsafe.plugin.version>2.22.1</maven.failsafe.plugin.version>
        <skipIntegrationTests>false</skipIntegrationTests>
        <surefire-junit47.version>2.22.1</surefire-junit47.version>
        <guava.version>32.1.2-jre</guava.version>
        <wiremock.version>2.31.0</wiremock.version>

      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>

      <avro.version>1.11.3</avro.version>
      <commons-io.version>2.8.0</commons-io.version>
      <commons.beanutils.version>1.9.4</commons.beanutils.version>
      <commons.codec.version>1.15</commons.codec.version>
      <commons.compress.version>1.26.1</commons.compress.version>
      <confluent.maven.repo>https://packages.confluent.io/maven/</confluent.maven.repo>
      <dependency.check.version>6.1.6</dependency.check.version>
      <hadoop.version>2.10.2</hadoop.version>
      <hive.version>2.3.9</hive.version>
      <httpclient.version>4.5.13</httpclient.version>
      <httpcore.version>4.4.4</httpcore.version>
      <jackson.version>2.16.1</jackson.version>
      <jackson.databind.version>2.16.1</jackson.databind.version>
      <jackson.mapper.asl.version>1.9.14.jdk17-redhat-00001</jackson.mapper.asl.version>
      <jetty.version>9.4.53.v20231009</jetty.version>
      <jline.version>2.12.1</jline.version>
      <joda.version>2.9.6</joda.version>
      <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
      <netty.version>4.1.108.Final</netty.version>
      <parquet.version>1.11.2</parquet.version>
      <json.smart.version>2.4.10</json.smart.version>
      <thrift.version>0.13.0</thrift.version>
      <tomcat.version>8.5.65</tomcat.version>
      <slf4j-reload4j.version>1.7.36</slf4j-reload4j.version>
      <junit.version>4.13.2</junit.version>
      <junit-jupiter.version>5.10.2</junit-jupiter.version>
      <easymock.version>5.2.0</easymock.version>
      <powermock.version>2.0.9</powermock.version>
      <!--
      Note: The following three properties are used to change the version of the
      respective dependencies within hive. They are changed from the ones inherited from
      hive for fixing CVEs.
      -->
      <groovy.override.version>2.4.21</groovy.override.version>
      <derby.override.version>10.14.2.0</derby.override.version>
      <orc-core.override.version>1.4.3</orc-core.override.version>

      <kafka.version>3.7.0</kafka.version>
      <confluent.version.range>7.6.1</confluent.version.range>
      <kafka.connect.storage.common.version>11.2.16</kafka.connect.storage.common.version>
      <jettison.version>1.5.4</jettison.version>
      <json-smart.version>2.5.1</json-smart.version>

      <snappy.java>1.1.10.4</snappy.java>
      <checkstyle.suppressions.location>checkstyle/suppressions.xml</checkstyle.suppressions.location>
      <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
      <!-- temporary fix by pinning the version until we upgrade to a version of common that contains this or newer version.
          See https://github.com/confluentinc/common/pull/332 for details -->
      <dependency.check.version>6.1.6</dependency.check.version>
      <hadoop.version>3.3.6</hadoop.version>
      <jettison.version>1.5.4</jettison.version>
      <snakeyaml.version>2.0</snakeyaml.version>
      <woodstox.version>5.4.0</woodstox.version>
      <guava.version>32.1.2-jre</guava.version>
      <avro.version>1.11.3</avro.version>
      <zookeeper.version>3.8.4</zookeeper.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${aws.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sts</artifactId>
                <version>${aws.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${json.smart.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-common</artifactId>
        <version>11.2.4</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-core</artifactId>
        <version>11.2.4</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-format</artifactId>
        <version>11.2.4</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-partitioner</artifactId>
        <version>11.2.4</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>3.7.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>connect-api</artifactId>
        <version>3.7.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>connect-runtime</artifactId>
        <version>3.7.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>connect-json</artifactId>
        <version>3.7.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-storage-common-hadoop-shaded-guava</artifactId>
        <version>11.2.4</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-avro-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-protobuf-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-json-schema-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry</artifactId>
        <version>7.6.1</version>
<!--        <type>test-jar</type>-->
<!--        <scope>test</scope>-->
      </dependency>
<!--      <dependency>-->
<!--        <groupId>io.confluent</groupId>-->
<!--        <artifactId>kafka-schema-registry</artifactId>-->
<!--        <version>7.6.1</version>-->
<!--&lt;!&ndash;        <scope>test</scope>&ndash;&gt;-->
<!--      </dependency>-->
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.htrace</groupId>
            <artifactId>htrace-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.htrace</groupId>
            <artifactId>htrace-core4</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
          </exclusion>
          <exclusion>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>

          </exclusion>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop.thirdparty </groupId>
            <artifactId>hadoop-shaded-protobuf_3_7</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop.thirdparty </groupId>
            <artifactId>hadoop-shaded-guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
        <scope>test</scope>
      </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sts</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <!--Pin snappy-java version to fix CVE-2023-34455 -->
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${snappy.java}</version>
        </dependency>
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.12</artifactId>
            <version>${s3mock.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.version}</version>
            <type>test-jar</type>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.12</artifactId>
            <version>${kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.12</artifactId>
            <version>${kafka.version}</version>
            <type>test-jar</type>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-tools</artifactId>
            <version>${parquet.tools.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.12.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${org.testcontainer.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8-standalone</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.20.2</version>
            <scope>test</scope>
        </dependency>






      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-easymock</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-avro-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-protobuf-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-json-schema-converter</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry</artifactId>
        <version>7.6.1</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry</artifactId>
        <version>7.6.1</version>
        <scope>test</scope>
      </dependency>
      <!-- Temporary addition until powermock updates its mockito version -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.19.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>${woodstox.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency>

    </dependencies>

    <build>
      <pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>@{argLine} -Djava.awt.headless=true</argLine>
              <reuseForks>false</reuseForks>
              <forkCount>1</forkCount>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
          </plugin>
        </plugins>
      </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>prepare-agent-it</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>merge-coverage-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.basedir}</directory>
                                    <includes>
                                        <include>/target/jacoco.exec</include>
                                        <include>/target/jacoco-it.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.basedir}/target/jacoco-aggregate.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.40</minimum>
                                        </limit>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.40</minimum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.basedir}/target/jacoco-aggregate.exec</dataFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.basedir}/target/jacoco-aggregate.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-maven-plugin</artifactId>
                <version>${kafka.connect.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>kafka-connect</goal>
                        </goals>
                        <configuration>
                            <title>Kafka Connect S3</title>
                            <sourceUrl>https://github.com/confluentinc/kafka-connect-storage-cloud</sourceUrl>
                            <documentationUrl>https://docs.confluent.io/kafka-connect-s3-sink/current/index.html</documentationUrl>
                            <description>
                                The S3 connector, currently available as a sink, allows you to export data from Kafka topics to S3 objects in either Avro or JSON formats. In addition, for certain data layouts, S3 connector exports data by guaranteeing exactly-once delivery semantics to consumers of the S3 objects it produces.

                                Being a sink, the S3 connector periodically polls data from Kafka and in turn uploads it to S3. A partitioner is used to split the data of every Kafka partition into chunks. Each chunk of data is represented as an S3 object, whose key name encodes the topic, the Kafka partition and the start offset of this data chunk. If no partitioner is specified in the configuration, the default partitioner which preserves Kafka partitioning is used. The size of each data chunk is determined by the number of records written to S3 and by schema compatibility.
                            </description>
                            <logo>logos/s3.jpg</logo>

                            <supportProviderName>Confluent, Inc.</supportProviderName>
                            <supportSummary> <![CDATA[This connector is <a href="https://www.confluent.io/subscription/">supported by Confluent</a> as part of a <a href="https://www.confluent.io/product/confluent-platform/">Confluent Platform</a> subscription.]]></supportSummary>
                            <supportUrl>https://docs.confluent.io/current/</supportUrl>
                            <supportLogo>logos/confluent.png</supportLogo>

                            <ownerUsername>confluentinc</ownerUsername>
                            <ownerType>organization</ownerType>
                            <ownerName>Confluent, Inc.</ownerName>
                            <ownerUrl>https://confluent.io/</ownerUrl>
                            <ownerLogo>logos/confluent.png</ownerLogo>

                            <componentTypes>
                                <componentType>sink</componentType>
                            </componentTypes>

                            <tags>
                                <tag>s3</tag>
                                <tag>aws</tag>
                            </tags>

                            <confluentControlCenterIntegration>true</confluentControlCenterIntegration>

                            <requirements>
                                <requirement>AWS S3 bucket with write permissions</requirement>
                            </requirements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/development.xml</descriptor>
                        <descriptor>src/assembly/package.xml</descriptor>
                    </descriptors>
                    <attach>false</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin.version}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <remoteTagging>false</remoteTagging>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                      <!-- Skip the Integration tests as part of surefire run -->
                      <excludedGroups>org.apache.kafka.test.IntegrationTest</excludedGroups>
                  </configuration>
            </plugin>
            <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>${surefire-junit47.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                      <skip>${skipIntegrationTests}</skip>
                      <groups>org.apache.kafka.test.IntegrationTest</groups>
                    </configuration>
                    <executions>
                      <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                      </execution>
                    </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>standalone</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/standalone.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>licenses-package</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
<!--                            <execution>-->
<!--                                <id>create-licenses</id>-->
<!--                                <configuration>-->
<!--                                    <mainClass>io.confluent.licenses.LicenseFinder</mainClass>-->
<!--                                    <arguments>-->
<!--                                        &lt;!&ndash; Note use of development instead of package so we pick up all dependencies. &ndash;&gt;-->
<!--                                        <argument>-i-->
<!--                                            ${project.build.directory}/${project.build.finalName}-package/share/java/${project.name}-->
<!--                                        </argument>-->
<!--                                        <argument>-o ${project.basedir}/licenses</argument>-->
<!--                                        <argument>-f</argument>-->
<!--                                        <argument>-h-->
<!--                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/licenses.html-->
<!--                                        </argument>-->
<!--                                        <argument>-l-->
<!--                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/licenses-->
<!--                                        </argument>-->
<!--                                        <argument>-n-->
<!--                                            ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.name}/notices-->
<!--                                        </argument>-->
<!--                                        <argument>-t ${project.name}</argument>-->
<!--                                        <argument>-x licenses-${licenses.version}.jar</argument>-->
<!--                                    </arguments>-->
<!--                                </configuration>-->
<!--                                <phase>package</phase>-->
<!--                                <goals>-->
<!--                                    <goal>java</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
                        </executions>
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <executableDependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                            </executableDependency>
                        </configuration>
<!--                        <dependencies>-->
<!--                            <dependency>-->
<!--                                <groupId>io.confluent</groupId>-->
<!--                                <artifactId>licenses</artifactId>-->
<!--                                <version>${licenses.version}</version>-->
<!--                            </dependency>-->
<!--                        </dependencies>-->
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>licenses-source</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>create-licenses</id>-->
<!--                                <configuration>-->
<!--                                    <mainClass>io.confluent.licenses.LicenseFinder</mainClass>-->
<!--                                    <arguments>-->
<!--                                        &lt;!&ndash; Note use of development instead of package so we pick up all dependencies. &ndash;&gt;-->
<!--                                        <argument>-i-->
<!--                                            ${project.build.directory}/${project.build.finalName}-development/share/java/${project.name}-->
<!--                                        </argument>-->
<!--                                        <argument>-o ${project.basedir}/licenses</argument>-->
<!--                                        <argument>-f</argument>-->
<!--                                        <argument>-h ${project.basedir}/licenses.html</argument>-->
<!--                                        <argument>-l ${project.basedir}/licenses</argument>-->
<!--                                        <argument>-n ${project.basedir}/notices</argument>-->
<!--                                        <argument>-t ${project.name}</argument>-->
<!--                                        <argument>-x licenses-${licenses.version}.jar</argument>-->
<!--                                    </arguments>-->
<!--                                </configuration>-->
<!--                                <phase>package</phase>-->
<!--                                <goals>-->
<!--                                    <goal>java</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
                        <configuration>
                            <includeProjectDependencies>true</includeProjectDependencies>
                            <includePluginDependencies>true</includePluginDependencies>
                            <executableDependency>
                                <groupId>io.confluent</groupId>
                                <artifactId>licenses</artifactId>
                            </executableDependency>
                        </configuration>
<!--                        <dependencies>-->
<!--                            <dependency>-->
<!--                                <groupId>io.confluent</groupId>-->
<!--                                <artifactId>licenses</artifactId>-->
<!--                                <version>${licenses.version}</version>-->
<!--                            </dependency>-->
<!--                        </dependencies>-->
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.0.0</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>.</directory>
                                    <includes>
                                        <include>licenses.html</include>
                                        <directory>licenses/*.*</directory>
                                        <directory>notices/*.*</directory>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jenkins</id>
            <properties>
                <skipIntegrationTests>false</skipIntegrationTests>
            </properties>
        </profile>
    </profiles>

  <repositories>
    <repository>
      <id>maven-central</id>
      <name>maven central</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>confluent</id>
      <name>confluent</name>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
</project>
